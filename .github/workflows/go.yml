# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: uname
        run: uname -a

      - name: Build
        run: go build -v main.go

  build-v2:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: uname
        run: uname -a

      - name: Build
        run: go build -v main.go
  build-v3-mac:
    runs-on: macOS
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: uname
        run: uname -a

      - name: Build
        run: go build -v main.go

  build-v4-linter:
    runs-on: self-hosted-linux-ubuntu
    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write
    steps:
      - name: codecheckout
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0


      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: uname
        run: uname -a

      - name: Super-linter
        uses: super-linter/super-linter/slim@v7.2.0 # x-release-please-version
        env:
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
